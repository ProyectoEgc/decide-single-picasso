name: Python application

on:
  push:
    branches:
      - deploy
      - master
      - develop
  pull_request:
    branches:
      - deploy
      - master
      - develop

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.9
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.12
    - name: Send Email
        env:
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
        run: |
          cd decide
          python send_email.py
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies and config
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install codacy-coverage
        cp decide/local_settings.gactions.py decide/local_settings.py
    - name: traslations
        run: |
          sudo apt-get install gettext
          cd decide
          ./manage.py compilemessages
    - name: Run migrations (unnecessary)
      run: |
        cd decide
        python manage.py migrate
    - name: Run tests
      run: |
        cd decide
        coverage run ./manage.py test
        coverage xml 
    - name: Codacy Coverage Reporter
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: decide/coverage.xml 
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy
      if: github.ref == 'refs/heads/deploy'
      env:
        deploy_url: ${{secrets.RENDER_DEPLOY_HOOK_URL}}
      run: |
        curl "$deploy_url" 
