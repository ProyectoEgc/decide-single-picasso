name: Python application

on:
  push:
    branches:
      - develop
      - master
      - FEATURE34/ferbarbar1-carnucbol

jobs:
  build:
    strategy:
      matrix:
        pyversion: ['3.8', '3.9']

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.18-bullseye
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{matrix.pyversion}}
        uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.pyversion}}
      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev
      - name: Send Email
        env:
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
        run: |
          cd decide
          python send_email.py
      - name: Install Chrome and ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get -y update
          sudo apt-get install -y google-chrome-stable
          LATEST=$(wget -q -O - https://chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget https://chromedriver.storage.googleapis.com/$LATEST/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
      - name: Install dependencies and config
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install codacy-coverage
          cp decide/local_settings.gactions.py decide/local_settings.py
      - name: traslations
        run: |
          sudo apt-get install gettext
          cd decide
          ./manage.py compilemessages
      - name: Run migrations
        run: |
          cd decide
          python manage.py migrate
      - name: Run tests
        run: |
          cd decide
          coverage run --branch --source=. ./manage.py test --keepdb
          coverage xml
      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: decide/coverage.xml
